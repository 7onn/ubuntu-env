---
- become: yes
  hosts: all
  name: cosmos
  tasks:
    - name: include vars
      include_vars: playbook.vars.yml

    - name: add host
      become: yes
      become_user: root
      lineinfile:
        path: /etc/hosts
        line: "{{ ansible_host }} {{ hostname }}"
        create: yes

    - name: add the user 'tom' and add it to 'sudo'
      become: yes
      become_user: root
      user:
        name: tom
        group: sudo

    - name: add spotify gpg
      get_url:
        url: https://download.spotify.com/debian/pubkey_0D811D58.gpg
        dest: /usr/share/keyrings/pubkey_0D811D58.gpg

    - name: add spotify gpg
      apt_key:
        url: https://download.spotify.com/debian/pubkey_0D811D58.gpg
        state: present
        
    - name: add spotify repo
      apt_repository:
        repo: deb http://repository.spotify.com stable non-free
        state: present
        filename: spotify.list

    - name: add brave gpg
      get_url:
        url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
        dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg

    - name: add brave repo
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main
        state: present
        filename: brave-browser-release.list

    - name: add hashicorp key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: add hashicorp repo
      apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ os_release_codename }} main"
        state: present
                
    - name: update all packages
      apt:
        upgrade: dist
        update_cache: yes
        cache_valid_time: 3600

    - name: install system packages
      apt: 
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'gnupg2', 'software-properties-common', 'python', 'python3-pip', 'virtualenv', 'python3-setuptools', 'jq', 'xclip', 'gnome-tweaks', 'gnome-tweak-tool', 'bash', 'git', 'tree', 'nmap', 'lsof', 'openssl', 'libssl-dev', 'libssl-doc', 'libseccomp2']
        state: latest 

    - name: add google gpg
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/cloud.google.gpg

    - name: add google repo
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
        state: present
        filename: google-cloud-sdk.list

    - name: install user packages
      apt: 
        name: ['postgresql-client', 'brave-browser', 'spotify-client', 'emacs', 'packer', 'google-cloud-sdk']
        state: latest

    - name: set downloads folder
      file:
        path: "{{ downloads_folder }}"
        state: directory
        
    - name: get vscode
      get_url:
        url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
        dest: "{{ downloads_folder }}vscode.deb"

    - name: install vscode
      apt:
        deb: "{{ downloads_folder }}vscode.deb" 

    - name: download containerd
      get_url: 
        url: https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/containerd.io_1.4.3-1_amd64.deb
        dest: "{{ downloads_folder }}containerd.io_1.4.3-1_amd64.deb" 

    - name: install containerd
      apt:
        deb: "{{ downloads_folder }}containerd.io_1.4.3-1_amd64.deb" 

    - name: add docker GPG apt key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: add docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
        state: present

    - name: index new repo into the cache
      become: yes
      apt:
        update_cache: yes
        name: "*"
        state: latest
        force_apt_get: yes

    - name: update apt and install docker-ce
      apt:
        name: docker-ce 
        state: latest

    - name: add the user 'tom' and add it to 'docker'
      user:
        name: tom
        group: docker

    - name: install python packages
      pip:
        name: ['docker', 'awscli', 'yq']

    - name: install docker-compose
      get_url: 
        url : https://github.com/docker/compose/releases/download/1.28.5/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: install zsh
      apt:
        name: zsh
        state: latest
    
    - name: get terraform
      get_url:
        url: https://releases.hashicorp.com/terraform/0.14.7/terraform_0.14.7_linux_amd64.zip
        dest: "{{ downloads_folder }}terraform_0.14.7_linux_amd64.zip"
    
    - name: install terraform
      unarchive:
        src: "{{ downloads_folder }}terraform_0.14.7_linux_amd64.zip"
        dest: "/usr/local/bin"
        mode: 0755

    - name: install aws-vault
      get_url:
        url: https://github.com/99designs/aws-vault/releases/download/v6.3.1/aws-vault-linux-amd64
        dest: "/usr/local/bin/aws-vault"
        mode: 0755

    - name: install aws-cli
      pip:
        name: awscli
    
    - name: get slack
      get_url:
        url: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.14.0-amd64.deb
        dest: "{{ downloads_folder }}slack-desktop-4.14.0-amd64.deb"

    - name: install slack
      apt:
        deb: "{{ downloads_folder }}slack-desktop-4.14.0-amd64.deb"
      failed_when: false
    
    - name: install kubectl
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
        dest: "/usr/local/bin/kubectl"
        mode: 0755

    - name: get git-crypt
      get_url:
        url: https://www.agwa.name/projects/git-crypt/downloads/git-crypt-0.6.0.tar.gz
        dest: "{{ downloads_folder }}git-crypt-0.6.0.tar.gz"

    - name: unzip git-crypt
      unarchive:
        src: "{{ downloads_folder }}git-crypt-0.6.0.tar.gz"
        dest: "{{ downloads_folder }}"

    - name: bake git-crypt
      become: yes
      make:
        chdir: "{{ downloads_folder }}git-crypt-0.6.0"
    
    - name: build git-crypt
      become: yes
      make:
        chdir: "{{ downloads_folder }}git-crypt-0.6.0"
        target: install

    - name: install git-crypt
      copy:
        src: "{{ downloads_folder }}git-crypt-0.6.0/git-crypt"
        dest: /usr/local/bin/git-crypt
        mode: 0755

    - name: get helm
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        dest: "{{ downloads_folder }}get-helm-3"
        mode: 0700

    - name: install helm
      shell: "{{ downloads_folder }}get-helm-3"
      args:
        executable: /bin/bash

    - name: get halyard
      get_url:
        url: https://raw.githubusercontent.com/spinnaker/halyard/master/install/macos/InstallHalyard.sh
        dest: "{{ downloads_folder }}InstallHalyard.sh"
        mode: 0700

    - name: install halyard
      shell: "{{ downloads_folder }}InstallHalyard.sh"
      args:
        executable: /bin/bash
      failed_when: false

    - name: get golang
      get_url:
        url: https://golang.org/dl/go1.16.3.linux-amd64.tar.gz
        dest: "{{ downloads_folder }}go1.16.3.linux-amd64.tar.gz"

    - name: extract golang
      unarchive:
        src: "{{ downloads_folder }}go1.16.3.linux-amd64.tar.gz"
        dest: "{{ downloads_folder }}"

    - name: install golang
      copy:
        src: "{{ downloads_folder }}go/bin/"
        dest: /usr/local/bin/
        mode: 0755

    - name: set hostname
      become: yes
      hostname:
        name: "{{ hostname }}"
